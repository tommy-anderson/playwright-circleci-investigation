version: 2.1

executors:
  medium-node-executor:
    docker:
      - image: cimg/node:lts
    resource_class: medium

commands:
  install-node-modules:
    steps:
      - run:
          name: Compute patch-package hash
          command: find patches/ -type f -print0 | sort -z | xargs -0 sha256sum | sha256sum > patches-hash
      - restore_cache:
          keys:
            - v3-node_modules-{{ checksum "package-lock.json" }}-{{ checksum "patches-hash" }}
      - run: |
          if [ ! -d node_modules ]; then
            npm ci
          fi
      - run:
          name: Apply patches
          command: npx patch-package
      - save_cache:
          key: v3-node_modules-{{ checksum "package-lock.json" }}-{{ checksum "patches-hash" }}
          paths:
            - node_modules

  playwright-install:
    steps:
      - run:
          name: Install Playwright browsers
          command: npx playwright install --with-deps

jobs:
  circleci-pw-tests:
    executor: medium-node-executor
    parallelism: 2
    steps:
      - checkout
      - install-node-modules
      - playwright-install
      - run:
          name: Fix CircleCI test timings
          command: node test.js "$CIRCLE_INTERNAL_TASK_DATA/circle-test-results/results.json" "tests/"
      - run:
          name: Run Playwright tests based on CircleCI timings
          command: |
            circleci tests glob "tests/**/*.ts" | circleci tests run --command="xargs npx playwright test --config=playwright.config.ts" --verbose --split-by=timings --time-default=1s
      - store_artifacts:
          path: tests/playwright/results.xml
          name: Store JUNIT test reports
      - store_test_results:
          name: Store XML test reports
          path: tests/playwright/results.xml

workflows:
  run-tests:
    jobs:
      - circleci-pw-tests
